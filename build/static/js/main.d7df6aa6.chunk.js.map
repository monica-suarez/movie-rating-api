{"version":3,"sources":["components/MovieSearch/index.js","components/MovieSearch/MovieSearch.js","components/SearchResults/index.js","components/SearchResults/SearchResults.js","components/Home/index.js","components/Home/Home.js","components/MovieDetails/index.js","components/MovieDetails/MovieDetails.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["MovieSearch","props","searchinput","onSubmit","handleClick","id","onChange","handleUpdate","type","name","placeholder","value","SearchResults","className","movies","map","movie","index","console","log","to","pathname","movieProp","title","Home","useState","search","setSearch","setMovies","e","preventDefault","fetch","process","then","response","json","data","results","target","MovieDetails","movieDetails","setMovieDetails","director","setDirector","movie_id","match","params","location","original_title","originalTitle","getDetails","a","res","crew","directorName","filter","crewmember","job","useEffect","moviedetails","Router","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7df6aa6.chunk.js","sourcesContent":["import MovieSearch from \"./MovieSearch\";\nexport default MovieSearch;\n","import React from \"react\";\n\nconst MovieSearch = (props, searchinput) => {\n  return (\n    <form onSubmit={props.handleClick}>\n      <label id=\"searchinput\">Find a Movie:</label>\n      <br />\n      <br />\n      <input\n        onChange={props.handleUpdate}\n        type=\"text\"\n        name=\"searchinput\"\n        placeholder=\"Enter A Movie Title\"\n        searchinput={searchinput}\n      />\n      <br />\n      <br />\n      <input type=\"submit\" value=\"Submit\" />\n      <br />\n      <br />\n    </form>\n  );\n};\n\nexport default MovieSearch;\n","import SearchResults from \"./SearchResults\";\nexport default SearchResults;\n","import { React } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchResults = (props) => {\n  return (\n    <ul className=\"result-list\">\n      {props.movies.map((movie, index) => {\n        console.log(movie);\n        return (\n          <li className=\"result-list-item\" key={index}>\n            <Link\n              to={{\n                pathname: `/movieDetails/${movie.id}`,\n                movieProp: movie,\n              }}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default SearchResults;\n","import Home from \"./Home\";\nexport default Home;\n","import React, { useState } from \"react\";\nimport MovieSearch from \"../MovieSearch\";\nimport SearchResults from \"../SearchResults\";\n\nconst Home = () => {\n  const [search, setSearch] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  const handleUpdate = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    console.log(\"onClick AHOY\");\n    const API_KEY = process.env.REACT_APP_API_KEY;\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&include_adult=false`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setMovies(data.results);\n      });\n    console.log(setMovies);\n  };\n\n  return (\n    <div>\n      <h1>Search/Rate Movies</h1>\n      <MovieSearch handleClick={handleClick} handleUpdate={handleUpdate} />\n      <ul>\n        <SearchResults movies={movies} />\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import MovieDetails from \"./MovieDetails\";\nexport default MovieDetails;\n","import React, { useState, useEffect } from \"react\";\n\nconst MovieDetails = (props) => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [director, setDirector] = useState([]);\n  const movie_id = props.match.params.id;\n  console.log(movie_id);\n  console.log(props.location.movieProp.original_title);\n  //   const moviePoster = props.match.params.poster_path;\n  const originalTitle = props.location.movieProp.original_title;\n  //   const movieOverview = props.match.params.movieOverview;\n  //   const releaseDate = props.match.params.release_date\n  const getDetails = async () => {\n    try {\n      const movie_id = props.match.params.id;\n      console.log(movie_id);\n      const API_KEY = process.env.REACT_APP_API_KEY;\n      const res = await fetch(\n        `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n      );\n      const data = await res.json();\n      console.log(data.crew);\n      setMovieDetails(data);\n      const directorName = data.crew.filter((crewmember) => {\n        return crewmember.job === \"Director\";\n      });\n      setDirector(directorName[0].name);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getDetails();\n  }, []);\n  //   const movie_id = props.match.params.id;\n  //   console.log(movie_id);\n  return (\n    <div moviedetails={movieDetails}>\n      <p>{originalTitle}</p>\n      <p>{movie_id}</p>\n      <p>{director}</p>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport MovieDetails from \"./components/MovieDetails\";\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/movieDetails/:id\" component={MovieDetails} />\n    </Switch>\n  );\n};\n\nexport default Router;\n","import \"./App.css\";\nimport React from \"react\";\nimport Router from \"./Router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}